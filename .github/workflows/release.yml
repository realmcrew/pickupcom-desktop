name: Release
on:
  push:
    branches:
      - release

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Create .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{secrets.GH_NPM_PUBLISH_TOKEN}}" > .npmrc
          echo "@${{secrets.NPM_ORG_NAME}}:registry=https://npm.pkg.github.com/" >> .npmrc

      - name: Create Dot env
        run: |
          echo "VITE_APP_MODE=${{ secrets.VITE_APP_MODE }}" > .env
          echo "VITE_ESTIMATE_HOME_PAGE_URL=${{ secrets.VITE_ESTIMATE_HOME_PAGE_URL }}" >> .env

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # Change this to npm, yarn or pnpm.

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm' # Set this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_ACTIONS_TOKEN }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: '__VERSION__'
          releaseBody: ${{ github.event.head_commit.message }} # Commit message
          releaseDraft: true
          prerelease: false
